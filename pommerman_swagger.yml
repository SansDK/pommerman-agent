swagger: "2.0"
info:
  description: "API for an agent of the Bombersauce AI-hackathon."
  version: "1.0.0"
  title: "Bombersauce API"
host: "localhost"
schemes:
- "http"
paths:
  /ping:
    get:
      responses:
        "200":
          description: "Ok"
  /init_agent:
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Initialize body"
        required: true
        schema:
          $ref: "#/definitions/init_agent_request"
      responses:
        "200":
          description: "Ok"
  /action:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "state"
        description: "Game state"
        required: true
        schema:
          $ref: "#/definitions/action_request"
      responses:
        "200":
          description: "The action to take"
          schema:
            $ref: "#/definitions/action_response"
  /episode_end:
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Episode end body"
        required: false
        schema:
          $ref: "#/definitions/episode_end_request"
      responses:
        "200":
          description: "Ok"
  /shutdown:
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Shutdown body"
        required: false
        schema:
          type: "object"
      responses:
        "200":
          description: "Ok"
definitions:
  init_agent_request: 
    type: object
    properties: 
      id: 
        type: integer
        format: int32
      game_type:
        $ref: "#/definitions/game_type"
  action_request:
    type: object
    required:
      - obs
    properties: 
      obs: 
        type: object
        required:
          - alive
          - board
          - bomb_blast_strength
          - bomb_life
          - bomb_moving_direction
          - flame_life
          - position
          - blast_strength
          - can_kick
          - ammo
          - enemies
          - step_count
        properties: 
          alive: 
            type: array
            items: 
              type: integer
              format: int32
              enum: [10, 11, 12, 13]
            example: [10, 11, 12, 13]
            minItems: 0
            maxItems: 4
            description: "This array contains the ids of all alive players."
          board: 
            type: array
            minItems: 11
            maxItems: 11
            items: 
              type: array
              minItems: 11
              maxItems: 11
              items: 
                type: integer
                format: int32
                enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20]
                description: >
                  Item:
                   * `0` - Passage, meaning you can pass through
                   * `1` - Rigid, meaning you can't pass through
                   * `2` - Wood, which can be removed by explosions
                   * `3` - Bomb
                   * `4` - Flames from an exploded bomb
                   * `5` - Fog
                   * `6` - ExtraBomb powerup, which increases your ammo by 1
                   * `7` - IncrRange powerup, which increases your blast strength by 1
                   * `8` - Kick powerup, which allows you to kick bombs
                   * `9` - AgentDummy
                   * `10` - Agent 0
                   * `11` - Agent 1
                   * `12` - Agent 2
                   * `13` - Agent 3
                   * `14` - Title
                   * `20` - Background
            example: [[ 0,  0,  2,  1,  1,  0,  1,  1,  2,  2,  2],
                      [ 0, 10,  0,  0,  2,  2,  2,  0,  0, 13,  2],
                      [ 2,  0,  0,  1,  2,  2,  2,  2,  0,  0,  1],
                      [ 1,  0,  1,  0,  0,  0,  0,  1,  1,  0,  1],
                      [ 1,  2,  2,  0,  0,  1,  1,  1,  1,  2,  1],
                      [ 0,  2,  2,  0,  1,  0,  1,  0,  0,  2,  1],
                      [ 1,  2,  2,  0,  1,  1,  0,  1,  2,  2,  1],
                      [ 1,  0,  2,  1,  1,  0,  1,  0,  0,  0,  2],
                      [ 2,  0,  0,  1,  1,  0,  2,  0,  0,  0,  2],
                      [ 2, 11,  0,  0,  2,  2,  2,  0,  0, 12,  0],
                      [ 2,  2,  1,  1,  1,  1,  1,  2,  2,  0,  0]]
            description: "The playing board. The first row in this list is the top of the board, and so on."
          bomb_blast_strength: 
            type: array
            minItems: 11
            maxItems: 11
            items: 
              type: array
              minItems: 11
              maxItems: 11
              items: 
                type: number
                format: float
                example: 0.0
            example: [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
            description: "The blast strength of each bomb on the playing board. The first row in this list is the top of the board, and so on. If a tile does not contain a bomb, its value will be 0."
          bomb_life: 
            type: array
            minItems: 11
            maxItems: 11
            items: 
              type: array
              minItems: 11
              maxItems: 11
              items: 
                type: number
                format: float
                example: 0.0
            example: [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
            description: "The remaining time of each bomb on the playing board before it explodes. The first row in this list is the top of the board, and so on. If a tile does not contain a bomb, its value will be 0."
          bomb_moving_direction: 
            type: array
            minItems: 11
            maxItems: 11
            items: 
              type: array
              minItems: 11
              maxItems: 11
              items: 
                type: number
                format: float
                example: 0.0
                description: >
                  Direction:
                   * `0` - Not moving
                   * `1` - Up
                   * `2` - Down
                   * `3` - Left
                   * `4` - Right
            example: [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
            description: "The movement direction of each bomb on the playing board. The first row in this list is the top of the board, and so on. If a tile does not contain a bomb, its value will be 0."
          flame_life: 
            type: array
            minItems: 11
            maxItems: 11
            items: 
              type: array
              minItems: 11
              maxItems: 11
              items: 
                type: number
                format: float
                example: 0.0
            example: [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]
            description: "The remaining time of each flame on the playing board before it disappears. The first row in this list is the top of the board, and so on. If a tile does not contain a flame, its value will be 0."
          game_type: 
            $ref: "#/definitions/game_type"
          game_env: 
            type: string
            example: "pommerman.envs.v0:Pomme"
          position: 
            type: array
            minItems: 2
            maxItems: 2
            items: 
              type: integer
              format: int32
              minimum: 0
              maximum: 10
            example: [1, 9]
            description: "The `[x, y]` position of your agent on the board. The bottom left cell has `x = 0` and `y = 0`."
          blast_strength: 
            type: integer
            format: int32
            example: 2
            description: "The blast strength of your agent's bombs."
          can_kick: 
            type: boolean
            description: "Whether your agent can kick bombs. You can gain this ability by collecting the Kick powerup."
          teammate: 
            type: integer
            format: int32
            example: 9
          ammo: 
            type: integer
            format: int32
            example: 1
            description: "The number of bombs your agent can place."
          enemies: 
            type: array
            items: 
              type: integer
              format: int32
            example: [11, 12, 13]
            description: "The ids of your enemies."
          step_count: 
            type: integer
            format: int32
            example: 0
      action_space: 
        type: integer
        format: int32
        example: 6
  action_response: 
    type: object
    required:
      - action
    properties: 
      action: 
        type: integer
        format: int32
        enum: [0, 1, 2, 3, 4, 5]
        description: >
          Action to take:
           * `0` - Stop
           * `1` - Up
           * `2` - Down
           * `3` - Left
           * `4` - Right
           * `5` - Bomb
  episode_end_request: 
    type: object
    required:
      - reward
    properties: 
      reward: 
        type: integer
        format: int32
        enum: [0, 1, 2, 3]
        description: >
          Result of the game:
           * `0` - Win
           * `1` - Loss
           * `2` - Tie
           * `3` - Incomplete
  game_type:
    type: integer
    format: int32
    enum: [1, 2, 3, 4]
    example: 1
    description: >
      Game type:
       * `1` - FFA
       * `2` - Team
       * `3` - TeamRadio
       * `4` - OneVsOne
